{"version":3,"sources":["Components/modal-confirm/index.js","Components/board-list-items/index.js","Components/modal-new-board/index.js","Components/header/index.js","Views/Homepage/index.js","Views/BoardDetails/index.js","App.js","reportWebVitals.js","index.js"],"names":["ConfirmModal","props","footer","centered","visible","isModalOpened","onCancel","className","status","title","subTitle","extra","type","onClick","danger","shape","onConfirm","confirmLabel","BoardListItem","useState","setModalOpened","created","Date","board","toDateString","name","style","width","height","hoverable","cover","alt","src","actions","ShareAltOutlined","CopyOutlined","DeleteOutlined","e","stopPropagation","subtitle","NewBoardModal","icon","PlusCircleFilled","fontSize","id","size","allowClear","placeholder","onChange","onPressEnter","value","newBoardName","Header","Layout","CustomHeader","theme","mode","defaultSelectedKeys","Item","Content","Title","Typography","Homepage","history","useHistory","boardData","setBoardData","loading","setLoading","setIsModalOpened","setNewBoardName","useEffect","a","fetch","json","result","fetchBoardData","level","gutter","align","justify","PlusCircleTwoTone","map","item","_id","push","method","headers","body","JSON","stringify","then","data","ok","boards","slice","index","findIndex","splice","notification","success","message","duration","placement","error","temp","unshift","document","querySelector","Footer","TextArea","Text","Paragraph","Input","BoardDetails","toggleInput","column","ArrowLeftOutlined","editable","textAlign","span","color","bordered","rows","autoSize","minRows","maxRows","backgroundColor","DeleteFilled","App","path","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","process","getElementById"],"mappings":"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","file":"static/js/main.8481d975.chunk.js","sourcesContent":["import React from 'react';\r\nimport './index.css';\r\nimport { Modal, Layout, Result, Button } from 'antd';\r\n\r\nconst ConfirmModal = (props) =>\r\n{\r\n    return (\r\n        <Layout>\r\n            <Modal footer={[]} centered visible={props.isModalOpened} onCancel={props.onCancel}>\r\n                <Result className=\"result\" status={props.status} title={props.title} subTitle={props.subTitle} extra={[\r\n                    <Button key=\"cancel\" type=\"text\" onClick = {props.onCancel}>Cancel</Button>,\r\n                    <Button type=\"dashed\" danger shape=\"round\" key=\"console\" onClick={props.onConfirm}>{props.confirmLabel}</Button>\r\n                    ]}></Result>\r\n            </Modal>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default ConfirmModal;","import { Card } from 'antd';\r\nimport React, {useState} from 'react';\r\nimport './index.css';\r\nimport { Typography, Modal, Layout, Result, Button } from 'antd';\r\nimport { ShareAltOutlined, CopyOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport ConfirmModal from '../modal-confirm/index';\r\n\r\nconst BoardListItem = (props) =>\r\n{\r\n    const [isModalOpened, setModalOpened] = useState(false);\r\n\r\n    const created = new Date(props.board.created).toDateString();\r\n\r\n    const onConfirm = (e) =>\r\n    {\r\n        e.stopPropagation();\r\n        props.onConfirm();\r\n        setModalOpened(false);\r\n    }\r\n\r\n    const onCancel = (e) =>\r\n    {\r\n        e.stopPropagation();\r\n        setModalOpened(false);\r\n    }\r\n\r\n    const onDelete = (e) =>\r\n    {\r\n        e.stopPropagation();\r\n        setModalOpened(true);\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <Card title={props.board.name} className=\"card\" style={{ width: 280, height: 290 }} hoverable=\"true\" extra={created}\r\n                cover={\r\n                    <img alt=\"avatar\" src=\"./board-avt.jpg\"/>\r\n                }\r\n                actions={[\r\n                <ShareAltOutlined key= \"share\" />,\r\n                <CopyOutlined key = \"clone\" />,\r\n                    <DeleteOutlined key=\"delete\" onClick={onDelete}/>\r\n                ]} >\r\n            </Card>\r\n\r\n            <ConfirmModal isModalOpened = {isModalOpened} status=\"error\" title=\"Delete this board?\" subtitle=\"This cannot be undone!\" confirmLabel = \"Delete\" onConfirm ={onConfirm} onCancel = {onCancel}></ConfirmModal>\r\n        </Layout>\r\n       \r\n\r\n    );\r\n}\r\n\r\nexport default BoardListItem;","import React from 'react';\r\nimport './index.css';\r\nimport { Modal, Layout, Input, Button, Result } from 'antd';\r\nimport { PlusCircleFilled } from '@ant-design/icons';\r\n\r\nconst NewBoardModal = (props) =>\r\n{   \r\n\r\n    return (\r\n        <Layout>\r\n            <Modal footer={[]} centered visible={props.isModalOpened} onCancel={props.onCancel}>\r\n                <Result title=\"New board\" className=\"result\" status={props.status} icon={<PlusCircleFilled style={{fontSize: 60}}></PlusCircleFilled>} extra={[\r\n                    <Input id=\"newBoardName\" size=\"large\" allowClear=\"true\" placeholder=\"New board name\" onChange={props.onChange} onPressEnter={props.onConfirm} value={props.newBoardName} />,\r\n                    <Button id=\"addNewBoardButton\" type=\"primary\" shape=\"round\" onClick = {props.onConfirm}>Create</Button>\r\n                ]}>\r\n                  \r\n                </Result>\r\n            </Modal>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default NewBoardModal;","import { Layout, Menu } from 'antd';\r\nimport React from 'react';\r\nconst { Header } = Layout;\r\n\r\nconst CustomHeader = (props) =>\r\n{\r\n    return (\r\n        <Header className=\"header\">\r\n            <div className=\"logo\" />\r\n            <Menu theme=\"light\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n                <Menu.Item key=\"1\">nav 1</Menu.Item>\r\n                <Menu.Item key=\"2\">nav 2</Menu.Item>\r\n                <Menu.Item key=\"3\">nav 3</Menu.Item>\r\n            </Menu>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default CustomHeader;","import React, { useState, useEffect } from 'react';\r\nimport './index.css';\r\nimport BoardListItem from '../../Components/board-list-items/index';\r\nimport NewBoardModal from '../../Components/modal-new-board/index';\r\nimport CustomHeader from '../../Components/header/index';\r\nimport { Layout, Col, Row, Typography, Card, notification, Button } from 'antd';\r\nimport { PlusCircleTwoTone } from '@ant-design/icons';\r\nimport { useHistory } from 'react-router-dom';\r\nconst { Content } = Layout;\r\nconst { Title } = Typography;\r\n\r\nfunction Homepage()\r\n{\r\n  const history = useHistory();\r\n  const [boardData, setBoardData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isModalOpened, setIsModalOpened] = useState(false);\r\n  const [newBoardName, setNewBoardName] = useState(\"\");\r\n\r\n  const handleBoardClick = (_id) =>\r\n  {\r\n    history.push('/board/' + _id);\r\n  }\r\n\r\n  const onCreateBoard = () =>\r\n  {\r\n    if (!newBoardName)\r\n    {\r\n      setIsModalOpened(false);\r\n      return;\r\n    }\r\n\r\n    fetch('https://retrospective-server-1712914.herokuapp.com/boards/add', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        name: newBoardName,\r\n        created: new Date(),\r\n      })\r\n    }).then(result => result.json()).then(data =>\r\n    {\r\n      if (data)\r\n      {\r\n        if (data._id)\r\n        {\r\n          let temp = boardData.slice();\r\n          temp.unshift(data);\r\n          setBoardData(temp);\r\n          notification.success({\r\n            message: \"Board creation successful!\",\r\n            duration: 1.5,\r\n            placement: \"bottomLeft\"\r\n          })\r\n        } else\r\n        {\r\n          notification.error({\r\n            message: \"Board creation failed!\",\r\n            duration: 1.5,\r\n            placement: \"bottomLeft\"\r\n          })\r\n        }\r\n      }\r\n    }\r\n    );\r\n\r\n    setIsModalOpened(false);\r\n    setNewBoardName(\"\");\r\n  }\r\n\r\n  const onCancel = () =>\r\n  {\r\n    setIsModalOpened(false);\r\n    setNewBoardName(\"\");\r\n  }\r\n\r\n  const onChange = () =>\r\n  {\r\n    const value = document.querySelector(\"#newBoardName\").value;\r\n    setNewBoardName(value);\r\n  }\r\n\r\n  const handleDeleteBoard = (id) =>\r\n  {\r\n    fetch('https://retrospective-server-1712914.herokuapp.com/boards/delete', {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        _id: id\r\n      })\r\n    }).then(result => result.json()).then(data =>\r\n    {\r\n      if (data.ok)\r\n      {\r\n        //Update state\r\n        let boards = boardData.slice();\r\n        const index = boardData.findIndex(item => item._id === id);\r\n    \r\n        if (index >= 0)\r\n        {\r\n          boards.splice(index, 1)\r\n          setBoardData(boards);\r\n        }\r\n    \r\n        notification.success({\r\n          message: \"Board successfully deleted!\",\r\n          duration: 1.5,\r\n          placement: \"bottomLeft\",\r\n        });\r\n      } else\r\n      {\r\n        notification.error({\r\n          message: \"Board deletion failed!\",\r\n          duration: 1.5,\r\n          placement: \"bottomLeft\",\r\n        });\r\n      }\r\n    })\r\n\r\n   \r\n  }\r\n  \r\n  useEffect(() =>\r\n  {\r\n    const fetchBoardData = async () =>\r\n    {\r\n      const result = await (await fetch('https://retrospective-server-1712914.herokuapp.com/boards')).json();\r\n      setBoardData(result);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchBoardData();\r\n\r\n  }, []);\r\n  \r\n\r\n  return (\r\n    <Layout className=\"layout\">\r\n      <CustomHeader />\r\n      <Content className=\"body\">\r\n        <Title level=\"1\">\r\n          My boards\r\n        </Title>\r\n        <Row gutter={[16, 16]} align=\"middle\" justify=\"center\">\r\n\r\n        <Col className=\"gutter-row\" >   \r\n            <Button type=\"dashed\" id=\"addBoardBtn\" shape=\"round \" onClick = {() => setIsModalOpened(true)}>\r\n              <PlusCircleTwoTone style={{ fontSize: 30 }} key=\"newBoard\"></PlusCircleTwoTone>\r\n            </Button>\r\n          </Col>\r\n\r\n          {boardData.map(item =>\r\n            <Col className=\"gutter-row\" onClick = {() => handleBoardClick(item._id)}>\r\n              <BoardListItem key={item._id} board={item} loading=\"false\" onConfirm={() =>  handleDeleteBoard(item._id)}></BoardListItem>\r\n            </Col>\r\n          )}\r\n\r\n          \r\n          <Col className=\"gutter-row\">   \r\n            <Card style={{ width: 300 }} className={loading? \"\": \"hidden\"} loading={loading}></Card>\r\n          </Col>\r\n          <Col className=\"gutter-row\">   \r\n            <Card style={{ width: 300 }} className={loading? \"\": \"hidden\"} loading={loading}></Card>\r\n          </Col>\r\n          <Col className=\"gutter-row\">   \r\n            <Card style={{ width: 300 }} className={loading? \"\": \"hidden\"} loading={loading}></Card>\r\n          </Col>\r\n          <Col className=\"gutter-row\">   \r\n            <Card style={{ width: 300 }} className={loading? \"\": \"hidden\"} loading={loading}></Card>\r\n          </Col>\r\n          <Col className=\"gutter-row\">   \r\n            <Card style={{ width: 300 }} className={loading? \"\": \"hidden\"} loading={loading}></Card>\r\n          </Col>\r\n         \r\n        </Row>\r\n            <NewBoardModal isModalOpened = {isModalOpened} onCancel= {onCancel} onConfirm = {onCreateBoard} onChange={onChange} newBoardName={newBoardName}></NewBoardModal>\r\n      </Content>\r\n    \r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './index.css';\r\nimport CustomHeader from '../../Components/header/index';\r\nimport { Layout, Col, Row, Menu, Typography, Card, notification, Button, Input } from 'antd';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { ArrowLeftOutlined, PlusCircleFilled, DeleteFilled } from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\nconst { Header, Footer, Content } = Layout;\r\nconst { Title, Text, Paragraph } = Typography;\r\nconst { TextArea } = Input; \r\n\r\nfunction BoardDetails()\r\n{\r\n\r\n    const toggleInput = (column, status) =>\r\n    {\r\n        switch (column)\r\n        {\r\n            case 'wentWell':\r\n            {\r\n                let input = document.querySelector(\"#wentWellInput\");\r\n                input.className = status;\r\n                break;\r\n                }\r\n            default: return;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Layout className = \"layout\">\r\n            <CustomHeader />\r\n            <Content className=\"body\">\r\n                <Row align=\"middle\" gutter={[24]}>\r\n                    <Col>\r\n                        <ArrowLeftOutlined style={{fontSize: 20}}></ArrowLeftOutlined>\r\n                    </Col>\r\n                    <Col>\r\n                        <Title editable level={1}>Board 1</Title>\r\n                    </Col>\r\n                </Row>\r\n                <DragDropContext>\r\n                    <Row gutter={[16, 16]} justify=\"space-between\" style={{textAlign: 'center'}}>\r\n                        <Col span={7}>\r\n                            <Title level={3}>Went Well</Title>\r\n                            <PlusCircleFilled className=\"addIcons\" style={{ color: '#009688' }} onClick={() =>{toggleInput('wentWell', \"\")}} />\r\n                            <div id=\"wentWellInput\" className=\"hidden\">\r\n                                <TextArea className=\"textarea\" bordered=\"false\" rows={3} autoSize={{ minRows: 3, maxRows: 5 }}></TextArea>\r\n                                <Row gutter={[24]} justify=\"center\">\r\n                                    <Col className=\"gutter-row\">\r\n                                        <Button type=\"dashed\" shape=\"round\" style={{backgroundColor: 'transparent'}} icon={<PlusCircleFilled style={{ color: '#009688' }} />}>Add</Button>\r\n                                    </Col>\r\n                                    <Col className=\"gutter-row\">\r\n                                        <Button type=\"text\" icon={<DeleteFilled style={{color: '#e91e63'}}/>} onClick = {() => { toggleInput('wentWell', \"hidden\")}}>Cancel</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n\r\n\r\n                        </Col>\r\n\r\n                        \r\n                        <Col span={7}>\r\n                            <Title level={3}>To Improve</Title>\r\n                            <PlusCircleFilled className=\"addIcons\" style={{ color: '#e91e63' }} />\r\n                            <TextArea rows={3}></TextArea>\r\n                        </Col>\r\n\r\n\r\n                        <Col span={7}>\r\n                            <Title level={3}>Action Items</Title>\r\n                            <PlusCircleFilled className=\"addIcons\" style={{ color: '#9c27b0' }} />\r\n                            <TextArea rows={3}></TextArea>\r\n                        </Col>\r\n\r\n\r\n                    </Row>\r\n                </DragDropContext>\r\n            </Content>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default BoardDetails;\r\n","import React from 'react';\nimport Homepage from './Views/Homepage/index';\nimport BoardDetails from './Views/BoardDetails/index';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n  Route\n} from \"react-router-dom\";\n\nfunction App()\n{\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/dashboard\">\n          <Homepage />\n        </Route>\n        <Route path=\"/board/:id\">\n          <BoardDetails />\n        </Route>\n        <Route path=\"/\">\n          <Redirect to=\"/dashboard\" />\n        </Route>\n      </Switch>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}